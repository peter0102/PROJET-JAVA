<diagram program="umletino" version="15.1"><zoom_level>6</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>466</x><y>256</y><w>156</w><h>54</h></coordinates><panel_attributes>Gui
--
--
initialize()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>688</x><y>256</y><w>198</w><h>90</h></coordinates><panel_attributes>Sync
--
sourceFolder : String
destinationFolder : String
isActive:boolean
--
copyFiles(source:File[], i:int, lvl:int, destination:File)
delete(source:File[], destination:File[])
check(source:File, destination:File):int
stopSync()
run()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>298</x><y>418</y><w>198</w><h>162</h></coordinates><panel_attributes>Server
--
serverSocket:ServerSocket
clientSocket:Socket
out:PrintWriter
in:BufferedReader
~destinationFolder:String
fileList:List&lt;String&gt;
firstWrite:boolean=false;
isRunning:boolean=true;
--
startServer(port:int)
receiveFiles(data:String)
send(file:File)
check(directory:File):int
delete(file:File)
deleteFolder(file:File)
stopServer()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>592</x><y>418</y><w>198</w><h>144</h></coordinates><panel_attributes>Client
--
socket:Socket
out:PrintWriter
in:BufferedReader
~sourceFolder:String
fileList:List&lt;String&gt;
firstSend:boolean=false;
--
startConnection(host:String, port:int)
receiveFiles(data:String)
send(file:File)
check(directory:File):int
delete(file:File)
deleteFolder(file:File)
stopConnection()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>490</x><y>304</y><w>42</w><h>186</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=1..1</panel_attributes><additional_attributes>50;10;50;280;10;280</additional_attributes></element><element><id>Relation</id><coordinates><x>556</x><y>304</y><w>48</w><h>186</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=1..1</panel_attributes><additional_attributes>10;10;10;280;60;280</additional_attributes></element><element><id>Relation</id><coordinates><x>514</x><y>304</y><w>36</w><h>180</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=Server</panel_attributes><additional_attributes>10;10;10;280</additional_attributes></element><element><id>Relation</id><coordinates><x>556</x><y>304</y><w>36</w><h>180</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=Client</panel_attributes><additional_attributes>10;10;10;280;10;250</additional_attributes></element><element><id>Relation</id><coordinates><x>706</x><y>160</y><w>66</w><h>108</h></coordinates><panel_attributes>lt=&lt;&lt;.
&lt;&lt;implements&gt;&gt;</panel_attributes><additional_attributes>10;10;14;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>736</x><y>100</y><w>78</w><h>42</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
Runnable
--
--
run()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>892</x><y>100</y><w>78</w><h>54</h></coordinates><panel_attributes>Thread
--
--
run()
start()
sleep(long)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>808</x><y>118</y><w>96</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=body 0..1</panel_attributes><additional_attributes>140;10;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>694</x><y>70</y><w>318</w><h>96</h></coordinates><panel_attributes>java.lang</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>616</x><y>292</y><w>84</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=Local 1..1</panel_attributes><additional_attributes>10;10;120;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>634</x><y>580</y><w>198</w><h>108</h></coordinates><panel_attributes>if (file.isDirectory())  { 
      buffer+="1||";
      send(file); //recursivity
}
if (file.isFile()) { 
     buffer+="0||" ;
     byte[] bytes = Files.readAllBytes(file);
     buffer += Base64.getEncoder().encodeToString(bytes);
     out.println(buffer);
     out.println("end");
}</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>628</x><y>508</y><w>114</w><h>96</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>170;140;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>658</x><y>454</y><w>180</w><h>60</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>280;10;10;80</additional_attributes></element><element><id>UMLNote</id><coordinates><x>820</x><y>370</y><w>282</w><h>144</h></coordinates><panel_attributes>String[] separatedData = data.split("\\|\\|");
if (separatedData[0].equals("1")) {
     File folder = new File(destinationFolder + File.separator + 
     separatedData[1]);
     folder.mkdir();
}
else if (separatedData[0].equals("0")) {
     File file = new File(destinationFolder + File.separator + 
     separatedData[1])
     FileOutputStream fileOutputStream = new 
     FileOutputStream(file);
fileOutputStream.write(Base64.getDecoder().decode(separatedData[2]));
fileOutputStream.close();
}
else if (data.equals("end")) { return }</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>652</x><y>514</y><w>222</w><h>72</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>350;100;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>856</x><y>538</y><w>198</w><h>84</h></coordinates><panel_attributes>for (File file : directory.listFiles() ) {
					 if (file.isDirectory()) {
                lenght += check(file) + 1;
       } else {
                lenght++;
       }
  }
return lenght;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>712</x><y>346</y><w>234</w><h>162</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>370;10;10;250</additional_attributes></element><element><id>UMLNote</id><coordinates><x>934</x><y>340</y><w>144</w><h>18</h></coordinates><panel_attributes>socket = new Socket(host, port);</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>244</x><y>508</y><w>78</w><h>78</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;110;110;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>100</x><y>550</y><w>156</w><h>30</h></coordinates><panel_attributes>serverSocket = new ServerSocket(port);
clientSocket = serverSocket.accept();</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>838</x><y>262</y><w>132</w><h>54</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>200;10;10;70</additional_attributes></element><element><id>UMLNote</id><coordinates><x>952</x><y>220</y><w>168</w><h>72</h></coordinates><panel_attributes>if (file.isFile()) {
     Files.copy(source,destination)
}
else if (file.isDirectory) {
     File dir = new File(dirPath)
     dir.mkdir
     copyFiles(source,0,lvl+1,dir) //recursivity</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>202</x><y>466</y><w>114</w><h>54</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;70;170;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>142</x><y>496</y><w>72</w><h>18</h></coordinates><panel_attributes>package private</panel_attributes><additional_attributes></additional_attributes></element></diagram>